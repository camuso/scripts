# get_mrcommits - crate the global bpcommits file for the given MR
#
# Globals
#      patchtount - number of patches in the patch series
#      bp_commits - file that will contain the backported commits
#
#
get_mrcommits() {
       local mr="$1"	# MR, the Merge Reqest
       local mrbranch	# branch of MR created by 'lab checkout MR'
       local basecmt	# base commit of the MR
       local mmbr	# "main" or "master" for origin

       mmbr=$(git branch | grep master >& /dev/null && echo master || echo main)
       lab mr checkout $mr 2> /dev/null
       mrbranch="$(git branch --show-current)"
       basecmt=$(lab mr show | \
               grep -m 1  "^Labels" | \
               awk -F "Dependencies::" ' { print $2 }' | \
               cut -d',' -f1 | xargs)

       [ -z "$basecmt" ] || [ "$basecmt" == "OK" ] && \
               basecmt=$(git merge-base HEAD $mmbr 2> /dev/null)

       patchcount=$(git rev-list --count $basecmt..)
       git log --reverse -p HEAD~$patchcount.. | grep  -i ^commit | cut -d' ' -f2 > $bp_commits
       git checkout -q $mmbr 2> /dev/null
       git branch -q -D $mrbranch 2> /dev/null
}

